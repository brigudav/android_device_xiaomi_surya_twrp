name: Recovery Build stock

on:
  workflow_dispatch:
    inputs:
      MANIFEST_URL:
        description: 'MANIFEST_URL'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git'
      LIBRARY_BRANCH:
        description: 'LIBRARY_BRANCH'
        required: true
        default: 'twrp-12.1'
        type: choice
        options:
        - twrp-11
        - twrp-12.1
      DEVICE_TREE_URL:
        description: 'DEVICE_TREE_URL'
        required: true
        default: 'https://github.com/brigudav/android_device_xiaomi_surya_twrp.git'
      DEVICE_TREE_BRANCH:
        description: 'DEVICE_TREE_BRANCH'
        required: true
        default: 'android-12.1'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/xiaomi/surya'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'surya'
      DEVICE_TYPE:
        description: 'DEVICE_TYPE'
        required: true
        default: 'recovery'
        type: choice
        options:
        - recovery
        - boot
        - vendorboot
      UPLOAD:
        description: 'Upload to Telegram Bot (true or false)'
        required: true
        default: 'yes'
        type: choice
        options:
        - yes
        - no
      PUBLISH:
        description: 'Publish to GitHub (true or false)'
        required: true
        default: 'yes'
        type: choice
        options:
        - yes
        - no

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Check Out
      uses: actions/checkout@v4

    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main

    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libncurses5 python3

    - name: Install OpenJDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo

    - name: Init Repo
      run: |
        export HOME=${GITHUB_WORKSPACE}
        cd ${GITHUB_WORKSPACE}
        mkdir ${GITHUB_WORKSPACE}/workspace
        cd ${GITHUB_WORKSPACE}/workspace
        git config --global user.name "brigudav"
        git config --global user.email "alexvl1972@hotmail.com"
        repo init --depth=1 -u ${{ github.event.inputs.MANIFEST_URL }} -b ${{ github.event.inputs.LIBRARY_BRANCH }}

    - name: Repo Sync
      run: |
        cd ${GITHUB_WORKSPACE}/workspace
        repo sync -j$(nproc --all)
        ls -al

    - name: Clone Device Tree
      run: |
        cd ${GITHUB_WORKSPACE}/workspace
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ./${{ github.event.inputs.DEVICE_PATH }}

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Check Build Tree
      uses: haya14busa/action-cond@v1
      id: manifesttype
      with:
        cond: ${{ github.event.inputs.LIBRARY_BRANCH == 'twrp-11' || github.event.inputs.LIBRARY_BRANCH == 'twrp-12.1' }}
        if_true: twrp
        if_false: omni

    - name: Building recovery
      run: |
        cd ${GITHUB_WORKSPACE}/workspace
        export ALLOW_MISSING_DEPENDENCIES=true
        source build/envsetup.sh
        lunch ${{ steps.manifesttype.outputs.value }}_${{ github.event.inputs.DEVICE_NAME }}-eng
        rm -rf .repo/
        make clean
        make ${{ github.event.inputs.DEVICE_TYPE }}image -j$(nproc --all)

    - name: Set Variables
      run: |
        echo "date=$(TZ=Australia/Sydney date +%Y%m%d-%H%M)" >> $GITHUB_OUTPUT
        echo "Outdir=${GITHUB_WORKSPACE}/workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}" >> $GITHUB_OUTPUT
      id: var

    - name: Add Img to Zip
      run: |
        cd ${{ steps.var.outputs.Outdir }}
        zip -9 twrp-${{ github.event.inputs.DEVICE_NAME }}-${{ steps.var.outputs.date }}.zip ${{ github.event.inputs.DEVICE_TYPE }}.img
        echo "name=$(find * -name *.zip -type f)" >> $GITHUB_OUTPUT
      id: zipname

    - name: Upload to Telegram Bot
      if: github.event.inputs.UPLOAD == 'true'
      env:
        CHAT_ID: ${{ secrets.TELEGRAM_TO }}
        BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      run: |
        curl https://api.telegram.org/bot$BOT_TOKEN/sendDocument \
        -F chat_id=$CHAT_ID \
        -F disable_notification=true \
        -F parse_mode=HTML \
        -F caption=" <b>- Build for <i>${{ github.event.inputs.DEVICE_NAME }}</i> completed.</b> " \
        -F document=@${{ steps.var.outputs.Outdir }}/${{ steps.zipname.outputs.name }}

    - name: Publish to GitHub
      if: github.event.inputs.PUBLISH == 'true'
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ steps.var.outputs.Outdir }}/${{ steps.zipname.outputs.name }}
        name: ${{ steps.zipname.outputs.name }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ github.event.inputs.LIBRARY_BRANCH }}
          Device: ${{ github.event.inputs.DEVICE_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.TEST }}
